#include <time.h>
#include <iostream>

// MainWindow* w = nullptr;
using namespace std;

const int tailleTb = 8;

int binarySearch(int array[], int toSearch)
{
    int start = 0;
    int end = tailleTb;
    int foundIndex = 0;
    
    for(start; start<end; start++){
        int mid = (start+end) /2;
        if(toSearch > array[mid]){
            start = mid + 1;
        }
        else if(toSearch < array[mid]){
            end = mid;
        }
        else{
            foundIndex = mid;
        }
    }

	return foundIndex;
}

void selectionSort(int toSort[]){ //pour trier tab (exo1 tp2)
    bool comtuveu = true;           
    while(comtuveu){
        comtuveu = false;
        for(int i=0;i<tailleTb;i++){
            for(int k=i;k<tailleTb;k++){
                if(toSort[i] > toSort[k]){
                    int n = toSort[i];
                    toSort[i] = toSort[k];
                    toSort[k] = n;
                    k=tailleTb;
                    comtuveu = true;
                }
            }

        }
    }
	
}

int main(int argc, char *argv[])
{
	// QApplication a(argc, argv);
	// MainWindow::instruction_duration = 500;
	// w = new BinarySearchWindow(binarySearch);
	// w->show();

	// return a.exec();

    srand((unsigned)time(NULL));    

    int toSearch = rand()%10;
    cout<<"nombre a chercher: "<<toSearch<<"\n";


	int tab[tailleTb];
    for(int i=0;i<tailleTb;i++){    // chiffres alÃ©atoire entre 1 et 10
        tab[i]=rand()%10;
    }

    selectionSort(tab);

    cout << "tableau: " << "\n";

    for(int i=0;i<tailleTb;i++){
        cout << tab[i] << "\n";
    }

    cout<<"resultat de la recherche: "<<binarySearch(tab, toSearch)<<"\n";
}
